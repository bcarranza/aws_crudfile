{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Mappings": {
		"SubnetConfig": {
			"VPC": {
				"CIDR": "10.101.0.0/16"
			},
			"Public": {
				"CIDR": "10.101.1.0/24"
			},
			"Private": {
				"CIDR": "10.101.64.0/18"
			}
		}
	},
    "Resources": {

        "myVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "VPC", "CIDR"]
				},
                "InstanceTenancy" : "default",
                "Tags" : [ {"Key" : "foo", "Value" : "bar"} ]
            }
        },
        "myInternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {}
        },
        "pubSubnet1": {
			"DependsOn": ["myVPC"],
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "myVPC"
				},
				"MapPublicIpOnLaunch": false,
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "Public", "CIDR"]
				}
			}
		},
		"privSubnet1": {
			"DependsOn": ["myVPC", "pubSubnet1"],
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "myVPC"
				},
				"AvailabilityZone": {
					"Fn::GetAtt": ["pubSubnet1", "AvailabilityZone"]
				},
				"MapPublicIpOnLaunch": false,
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "Private", "CIDR"]
				}
			}
		},
        
        "pubSubnet2": {
			"DependsOn": ["myVPC"],
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "myVPC"
				},
				"MapPublicIpOnLaunch": false,
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "Public", "CIDR"]
				}
			}
		},
		"privSubnet2": {
			"DependsOn": ["myVPC", "pubSubnet2"],
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "myVPC"
				},
				"AvailabilityZone": {
					"Fn::GetAtt": ["pubSubnet2", "AvailabilityZone"]
				},
				"MapPublicIpOnLaunch": false,
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "Private", "CIDR"]
				}
			}
		},

        "privRouteTable": {
			"DependsOn": ["myVPC"],
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "myVPC"
				}
			}
		},

        "myElasticLoadBalancing": {
            "DependsOn": ["myVPC"],
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "AvailabilityZones" : { "Fn::GetAZs" : "" },
                "Listeners": [{
                    "LoadBalancerPort": "80",
                    "InstancePort": "80",
                    "Protocol": "HTTP"
                }]
            }
        },
        "myInstance1": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "NetworkInterfaces": [
                    {
                        "SubnetId": {
                            "Ref": "pubSubnet1"
                        }
                    }
                ],
                "ImageId" : "ami-0a313d6098716f372",
                "KeyName" : "myInstance1",
                "InstanceType": "t2.micro"
            }
        },
        "myInstance2": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "NetworkInterfaces": [
                    {
                        "SubnetId": {
                            "Ref": "pubSubnet2"
                        }
                    }
                ],
                "ImageId" : "ami-0a313d6098716f372",
                "KeyName" : "myInstance2",
                "InstanceType": "t2.micro"
            }
        },
        "myBucket1": {
            "Type": "AWS::S3::Bucket",
            "Properties": {}
        },
        "myBucket2": {
            "Type": "AWS::S3::Bucket",
            "Properties": {}
        },
        "myRDSDb": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "DBName" : "fileUploadDb",
                "AllocatedStorage" : "100",
                "DBInstanceClass" : "db.t3.micro",
                "Engine" : "MySQL",
                "MasterUsername" : "userFileUpload",
                "MasterUserPassword" : "passFileUpload"
            },
            "DependsOn": ["myVPC"]
        },
        "myLambdaExecutionRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": ["lambda.amazonaws.com"] },
                "Action": ["sts:AssumeRole"]
              }]
            },
            "ManagedPolicyArns": ["arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]
          }
        },
        "myLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "index.handler",
                "Role": { "Fn::GetAtt" : ["myLambdaExecutionRole", "Arn"] },
                "Code": {
                  "S3Bucket": "lambda-functions",
                  "S3Key": "amilookup.zip"
                },
                "Runtime": "nodejs8.10",
                "Timeout": 25,
                "TracingConfig": {
                  "Mode": "Active"
               }
            }
        }
    }
}