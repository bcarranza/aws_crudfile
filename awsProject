{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Resources": {

        "myVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock" : "10.0.0.0/16",
                "EnableDnsSupport" : "false",
                "EnableDnsHostnames" : "false",
                "InstanceTenancy" : "dedicated",
                "Tags" : [ {"Key" : "foo", "Value" : "bar"} ]
            }
        },
        "myInternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {}
        },
        "mySubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "myVPC",
                },
                "CidrBlock" : "10.0.0.0/24",
                "AvailabilityZone" : "us-east-1a",
                "Tags" : [ { "Key" : "foo", "Value" : "bar" } ]
            }
        },
        "myElasticLoadBalancing": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "AvailabilityZones" : { "Fn::GetAZs" : "" },
                "Listeners": [{
                    "LoadBalancerPort": "80",
                    "InstancePort": "80",
                    "Protocol": "HTTP"
                }],
            }
        },
        "mySubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "myVPC"
                },
                "CidrBlock" : "10.0.0.0/24",
                "AvailabilityZone" : "us-east-1a",
                "Tags" : [ { "Key" : "foo", "Value" : "bar" } ]
            }
        },
        "myDBSubnetGroup" : {
           "Type" : "AWS::RDS::DBSubnetGroup",
           "Properties" : {
            "DBSubnetGroupDescription" : "subnet group para base de datos",
              "SubnetIds" : [
                  "mySubnet1",
                  "mySubnet2"
              ],
           }
        },
        "myInstance1": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "NetworkInterfaces": [
                    {
                        "SubnetId": {
                            "Ref": "mySubnet1"
                        }
                    }
                ],
                "ImageId" : "ami-0a313d6098716f372",
                "KeyName" : "myInstance1",
                "InstanceType": "t2.micro"
            }
        },
        "myInstance2": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "NetworkInterfaces": [
                    {
                        "SubnetId": {
                            "Ref": "mySubnet2"
                        }
                    }
                ],
                "ImageId" : "ami-0a313d6098716f372",
                "KeyName" : "myInstance2",
                "InstanceType": "t2.micro"
            }
        },
        "myBucket1": {
            "Type": "AWS::S3::Bucket",
            "Properties": {}
        },
        "myBucket2": {
            "Type": "AWS::S3::Bucket",
            "Properties": {}
        },
        "myRDSDb": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "DBName" : "fileUploadDb",
                "AllocatedStorage" : "100",
                "DBInstanceClass" : "db.m1.small",
                "Engine" : "MySQL",
                "EngineVersion" : "5.6.13",
                "Iops" : "1000",
                "MasterUsername" : "userFileUpload",
                "MasterUserPassword" : "passFileUpload",
                "DBSubnetGroupName":"myDBSubnetGroup"
            }
        },
        "myLambdaExecutionRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": ["lambda.amazonaws.com"] },
                "Action": ["sts:AssumeRole"]
              }]
            },
            "ManagedPolicyArns": ["arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]
          }
        },
        "myLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "index.handler",
                "Role": { "Fn::GetAtt" : ["myLambdaExecutionRole", "Arn"] },
                "Code": {
                  "S3Bucket": "lambda-functions",
                  "S3Key": "amilookup.zip"
                },
                "Runtime": "nodejs8.10",
                "Timeout": 25,
                "TracingConfig": {
                  "Mode": "Active"
               }
            }
        }
    }
}